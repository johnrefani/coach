<?php
session_start();

require '../connection/db_connection.php';

// Define requirements for the tiers (using placeholder values since they aren't defined in the original snippet)
$certified_req_sessions = 5; 
$distinguished_req_feedback = 10;
$elite_req_resources = 3;

// SESSION CHECK - UPDATED for the new 'users' table structure
// We now check for a general 'username' and ensure the 'user_type' is 'Mentor'.
if (!isset($_SESSION['username']) || $_SESSION['user_type'] !== 'Mentor') {
  // Redirect to a general login page if the user is not a logged-in mentor.
  header("Location: ../login.php"); // CHNAGE: Redirect to your main login page
  exit();
}

// FETCH Mentor_Name AND icon BASED ON username from the 'users' table
$username = $_SESSION['username']; // CHANGE: Using the new 'username' session variable
// CHANGE: The SQL query now targets the 'users' table instead of 'applications'.
// Column names are updated from First_Name, Last_Name, Mentor_Icon to first_name, last_name, icon.
$sql = "SELECT CONCAT(first_name, ' ', last_name) AS Mentor_Name, icon FROM users WHERE username = ? AND user_type = 'Mentor'";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $username); // CHANGE: Binding the new $username variable
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 1) {
  $row = $result->fetch_assoc();
  $_SESSION['mentor_name'] = $row['Mentor_Name'];

  // Check if icon exists and is not empty
  // CHANGE: Updated column name from 'Mentor_Icon' to 'icon'
  if (isset($row['icon']) && !empty($row['icon'])) {
    $_SESSION['mentor_icon'] = $row['icon'];
  } else {
    // Provide a default icon if none is set
    $_SESSION['mentor_icon'] = "../uploads/img/default_pfp.png";
  }
} else {
  // Handle case where mentor is not found, though session check should prevent this
  $_SESSION['mentor_name'] = "Unknown Mentor";
  $_SESSION['mentor_icon'] = "../uploads/img/default_pfp.png";
}

// NO CHANGE NEEDED BELOW THIS POINT FOR DATA FETCHING
// The following queries correctly use the mentor's full name, which we retrieved above.

// FETCH Course_Title AND Skill_Level BASED ON Mentor_Name
$mentorName = $_SESSION['mentor_name'];
$courseSql = "SELECT Course_Title, Skill_Level FROM courses WHERE Assigned_Mentor = ?";
$courseStmt = $conn->prepare($courseSql);
$courseStmt->bind_param("s", $mentorName);
$courseStmt->execute();
$courseResult = $courseStmt->get_result();

if ($courseResult->num_rows === 1) {
    $courseRow = $courseResult->fetch_assoc();
    $_SESSION['course_title'] = $courseRow['Course_Title'];
    $_SESSION['skill_level'] = $courseRow['Skill_Level'];
} else {
    $_SESSION['course_title'] = "No Assigned Course";
    $_SESSION['skill_level'] = "-";
}

$courseStmt->close();

// Query to count approved resources uploaded by the mentor
$resourceSql = "SELECT COUNT(*) AS approved_count FROM resources WHERE UploadedBy = ? AND Status = 'Approved'";
$resourceStmt = $conn->prepare($resourceSql);
$resourceStmt->bind_param("s", $mentorName);
$resourceStmt->execute();
$resourceResult = $resourceStmt->get_result();

if ($resourceResult->num_rows === 1) {
    $resourceRow = $resourceResult->fetch_assoc();
    $approvedResourcesCount = $resourceRow['approved_count'];
} else {
    $approvedResourcesCount = 0;
}

$resourceStmt->close();

// Query to count approved resources uploaded by the mentor
$resourceSql = "SELECT COUNT(*) AS approved_count FROM resources WHERE UploadedBy = ? AND Status = 'Approved'";
$resourceStmt = $conn->prepare($resourceSql);
$resourceStmt->bind_param("s", $mentorName);
$resourceStmt->execute();
$resourceResult = $resourceStmt->get_result();

if ($resourceResult->num_rows === 1) {
    $resourceRow = $resourceResult->fetch_assoc();
    $approvedResourcesCount = $resourceRow['approved_count'];
} else {
    $approvedResourcesCount = 0;
}

$resourceStmt->close();


// FETCH Number of Sessions BASED ON Course_Title
$courseTitle = $_SESSION['course_title'];
$sessionCount = 0;

if ($courseTitle !== "No Assigned Course") {
    $sessionSql = "SELECT COUNT(*) AS session_count FROM sessions WHERE Course_Title = ?";
    $sessionStmt = $conn->prepare($sessionSql);
    $sessionStmt->bind_param("s", $courseTitle);
    $sessionStmt->execute();
    $sessionResult = $sessionStmt->get_result();

    if ($sessionResult->num_rows === 1) {
        $sessionRow = $sessionResult->fetch_assoc();
        $sessionCount = $sessionRow['session_count'];
    }

    $sessionStmt->close();
  }
// Determine Unlock Statuses
$certified_unlocked = $sessionCount >= $certified_req_sessions;
$distinguished_unlocked = $certified_unlocked && ($feedbackCount >= $distinguished_req_feedback);
$elite_unlocked = $distinguished_unlocked && ($approvedResourcesCount >= $elite_req_resources);


$stmt->close();
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
Â  <meta charset="UTF-8" />
Â  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
Â  <link rel="stylesheet" href="css/dashboard.css" />
Â  <link rel="stylesheet" href="css/achievement.css" />
Â  <link rel="stylesheet" href="css/navigation.css"/>
Â  <link rel="icon" href="../uploads/img/coachicon.svg" type="image/svg+xml">
Â  <title>Achievement | Mentor</title>
</head>
<body>
<nav>
Â  <div class="nav-top">
Â  Â  <div class="logo">
Â  Â  Â  <div class="logo-image"><img src="../uploads/img/logo.png" alt="Logo"></div>
Â  Â  Â  <div class="logo-name">COACH</div>
Â  Â  </div>

Â  Â  <div class="admin-profile">
Â  Â  Â  <img src="<?php echo htmlspecialchars($_SESSION['mentor_icon']); ?>" alt="Mentor Profile Picture" />
Â  Â  Â  <div class="admin-text">
Â  Â  Â  Â  <span class="admin-name">
Â  Â  Â  Â  Â  <?php echo htmlspecialchars($_SESSION['mentor_name']); ?>
Â  Â  Â  Â  </span>
Â  Â  Â  Â  <span class="admin-role">Mentor</span>
Â  Â  Â  </div>
Â  Â  Â  <a href="edit_profile.php?username=<?= urlencode($_SESSION['username']) ?>" class="edit-profile-link" title="Edit Profile">
Â  Â  Â  Â  <ion-icon name="create-outline" class="verified-icon"></ion-icon>
Â  Â  Â  </a>
Â  Â  </div>
Â  </div>

Â  <div class="menu-items">
Â  Â  <ul class="navLinks">
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="dashboard.php">
Â  Â  Â  Â  Â  <ion-icon name="home-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Home</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="courses.php">
Â  Â  Â  Â  Â  <ion-icon name="book-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Course</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="sessions.php">
Â  Â  Â  Â  Â  <ion-icon name="calendar-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Sessions</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="feedbacks.php">
Â  Â  Â  Â  Â  <ion-icon name="star-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Feedbacks</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="activities.php">
Â  Â  Â  Â  Â  <ion-icon name="clipboard"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Activities</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList">
Â  Â  Â  Â  <a href="resource.php">
Â  Â  Â  Â  Â  <ion-icon name="library-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Resource Library</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  Â  <li class="navList active">
Â  Â  Â  Â  <a href="achievement.php">
Â  Â  Â  Â  Â  <ion-icon name="trophy-outline"></ion-icon>
Â  Â  Â  Â  Â  <span class="links">Achievement</span>
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  </ul>
Â  Â  <ul class="bottom-link">
Â  Â  Â  <li class="logout-link">
Â  Â  Â  Â  <a href="#" onclick="confirmLogout(event)">
Â  Â  Â  Â  Â  <ion-icon name="log-out-outline"></ion-icon>
Â  Â  Â  Â  Â  Logout
Â  Â  Â  Â  </a>
Â  Â  Â  </li>
Â  Â  </ul>
Â  </div>
</nav>

Â  <section class="dashboard">
Â  Â  <div class="top">
Â  Â  Â  <ion-icon class="navToggle" name="menu-outline"></ion-icon>
Â  Â  Â  <img src="../uploads/img/logo.png" alt="Logo"> </div>

Â  Â  <div id="homeContent" style="padding: 20px;"></div>

<section class="achievement-container">
Â  Â  <h1 class="page-title">My Achievements</h1>
Â  Â  <p class="page-description">
Â  Â  Â  Â  Celebrate your milestones! Below are the tiers for achieving certificates and recognition here on COACH. Click on any tier to see the full description and requirements.
Â  Â  </p>

Â  Â  <div class="achievement-tiers">

Â  Â  Â  Â  <div class="tier-card tier-certified">
Â  Â  Â  Â  Â  Â  <span class="tier-icon">ðŸ¥‰</span>
Â  Â  Â  Â  Â  Â  <h2 class="tier-title">Certified Mentor</h2>
Â  Â  Â  Â  Â  Â  <p class="tier-description">
Â  Â  Â  Â  Â  Â  Â  Â  The foundational level recognizing mentors who have successfully completed the core training modules and mentored their first batch of users. This tier establishes you as a recognized and capable mentor in the COACH community.
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  <button class="tier-button certified-button">View Details</button>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div class="tier-card tier-distinguished">
Â  Â  Â  Â  Â  Â  <span class="tier-icon">ðŸ¥ˆ</span>
Â  Â  Â  Â  Â  Â  <h2 class="tier-title">Distinguished Mentor</h2>
Â  Â  Â  Â  Â  Â  <p class="tier-description">
Â  Â  Â  Â  Â  Â  Â  Â  Awarded to mentors who have demonstrated consistent excellence, successfully guided multiple mentees, and received high feedback scores. You are a proven asset to our community.
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  <button class="tier-button distinguished-button">View Details</button>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div class="tier-card tier-elite">
Â  Â  Â  Â  Â  Â  <span class="tier-icon">ðŸ‘‘</span>
Â  Â  Â  Â  Â  Â  <h2 class="tier-title">Elite Mentor</h2>
Â  Â  Â  Â  Â  Â  <p class="tier-description">
Â  Â  Â  Â  Â  Â  Â  Â  The highest tier reserved for top-performing mentors who have contributed significantly to the platform, perhaps by creating resources or training new mentors. This status grants special recognition and privileges.
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  <button class="tier-button elite-button">View Details</button>
Â  Â  Â  Â  </div>

Â  Â  </div>
</section>

<div id="modal-certified" class="modal-overlay">
Â  Â  <div class="modal-content">
Â  Â  Â  Â  <span class="modal-close" onclick="closeModal('certified')">&times;</span>
Â  Â  Â  Â  <h2>Certified Mentor Progress</h2>
Â  Â  Â  Â  <p>Complete the following requirements to achieve the **Certified Mentor** status and unlock your certificate.</p>
Â  Â  Â  Â  
Â  Â  Â  Â  <ul class="progress-list">
Â  Â  Â  Â  Â  Â  <li class="certified-req-1">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Complete Core Mentor Training Modules</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status status-complete" data-current="1" data-required="1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ion-icon name="checkmark-circle"></ion-icon> Complete
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  <li class="certified-req-2">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Successfully conduct at least **<?php echo $certified_req_sessions; ?>** mentorship sessions.</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status" data-current="<?php echo $sessionCount; ?>" data-required="<?php echo $certified_req_sessions; ?>">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <?php echo $sessionCount; ?>/<?php echo $certified_req_sessions; ?>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  </ul>
Â  Â  Â  Â  
Â  Â  Â  Â  <button id="certified-download-btn" class="certificate-button" disabled>
Â  Â  Â  Â  Â  Â  Download Certified Mentor Certificate
Â  Â  Â  Â  </button>
Â  Â  </div>
</div>

<div id="modal-distinguished" class="modal-overlay">
Â  Â  <div class="modal-content">
Â  Â  Â  Â  <span class="modal-close" onclick="closeModal('distinguished')">&times;</span>
Â  Â  Â  Â  <h2>Distinguished Mentor Progress</h2>
Â  Â  Â  Â  <p>Complete the following requirements to achieve the **Distinguished Mentor** status and unlock your certificate.</p>
Â  Â  Â  Â  
Â  Â  Â  Â  <ul class="progress-list">
Â  Â  Â  Â  Â  Â  <li class="distinguished-req-1">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Achieve Certified Mentor Status</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status" data-current="<?php echo $certified_unlocked ? 1 : 0; ?>" data-required="1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <?php echo $certified_unlocked ? 'Unlocked' : 'Pending'; ?>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  <li class="distinguished-req-2">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Receive at least **<?php echo $distinguished_req_feedback; ?>** positive mentee feedback reports.</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status" data-current="<?php echo $feedbackCount; ?>" data-required="<?php echo $distinguished_req_feedback; ?>">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <?php echo $feedbackCount; ?>/<?php echo $distinguished_req_feedback; ?>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  </ul>
Â  Â  Â  Â  
Â  Â  Â  Â  <button id="distinguished-download-btn" class="certificate-button" disabled>
Â  Â  Â  Â  Â  Â  Download Distinguished Mentor Certificate
Â  Â  Â  Â  </button>
Â  Â  </div>
</div>

<div id="modal-elite" class="modal-overlay">
Â  Â  <div class="modal-content">
Â  Â  Â  Â  <span class="modal-close" onclick="closeModal('elite')">&times;</span>
Â  Â  Â  Â  <h2>Elite Mentor Progress</h2>
Â  Â  Â  Â  <p>Complete the following requirements to achieve the **Elite Mentor** status and unlock your certificate.</p>
Â  Â  Â  Â  
Â  Â  Â  Â  <ul class="progress-list">
Â  Â  Â  Â  Â  Â  <li class="elite-req-1">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Achieve Distinguished Mentor Status</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status" data-current="<?php echo $distinguished_unlocked ? 1 : 0; ?>" data-required="1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <?php echo $distinguished_unlocked ? 'Unlocked' : 'Pending'; ?>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  <li class="elite-req-2">
Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-item-text">Upload and have **<?php echo $elite_req_resources; ?>** resources approved in the Resource Library.</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span class="progress-status" data-current="<?php echo $approvedResourcesCount; ?>" data-required="<?php echo $elite_req_resources; ?>">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <?php echo $approvedResourcesCount; ?>/<?php echo $elite_req_resources; ?>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  </ul>
Â  Â  Â  Â  
Â  Â  Â  Â  <button id="elite-download-btn" class="certificate-button" disabled>
Â  Â  Â  Â  Â  Â  Download Elite Mentor Certificate
Â  Â  Â  Â  </button>
Â  Â  </div>
</div>

<script>
Â  Â  // PHP variables passed to JavaScript
Â  Â  const certifiedUnlocked = <?php echo json_encode($certified_unlocked); ?>;
Â  Â  const distinguishedUnlocked = <?php echo json_encode($distinguished_unlocked); ?>;
Â  Â  // FIX: Corrected variable name from $mentor_name to $_SESSION['mentor_name']
Â  Â  const mentorName = <?php echo json_encode($_SESSION['mentor_name']); ?>; 
Â  Â  
Â  Â  /**
Â  Â  Â * Toggles the visibility of a specific modal.
Â  Â  Â * @param {string} tier - The tier name ('certified', 'distinguished', 'elite').
Â  Â  Â */
Â  Â  function openModal(tier) {
Â  Â  Â  Â  document.getElementById(`modal-${tier}`).classList.add('active');
Â  Â  Â  Â  // Hide scrollbar on body when modal is open
Â  Â  Â  Â  document.body.style.overflow = 'hidden';
Â  Â  Â  Â  checkProgress(tier); // Check and update progress when modal opens
Â  Â  }

Â  Â  function closeModal(tier) {
Â  Â  Â  Â  document.getElementById(`modal-${tier}`).classList.remove('active');
Â  Â  Â  Â  document.body.style.overflow = ''; // Restore body scroll
Â  Â  }

Â  Â  // Close modal when clicking outside the content
Â  Â  document.querySelectorAll('.modal-overlay').forEach(overlay => {
Â  Â  Â  Â  overlay.addEventListener('click', (e) => {
Â  Â  Â  Â  Â  Â  if (e.target === overlay) {
Â  Â  Â  Â  Â  Â  Â  Â  const tier = overlay.id.replace('modal-', '');
Â  Â  Â  Â  Â  Â  Â  Â  closeModal(tier);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  });

Â  Â  /**
Â  Â  Â * Checks progress requirements and updates the UI (status color, checkmark icon).
Â  Â  Â * Also enables the download button if all criteria are met.
Â  Â  Â * @param {string} tier - The tier name.
Â  Â  Â */
Â  Â  function checkProgress(tier) {
Â  Â  Â  Â  let allCriteriaMet = true;
Â  Â  Â  Â  
Â  Â  Â  Â  // Loop through all progress status elements in the current modal
Â  Â  Â  Â  document.querySelectorAll(`#modal-${tier} .progress-status`).forEach(statusEl => {
Â  Â  Â  Â  Â  Â  const current = parseInt(statusEl.getAttribute('data-current'));
Â  Â  Â  Â  Â  Â  const required = parseInt(statusEl.getAttribute('data-required'));
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  // Check if status is explicitly set to 'Complete' or calculated as complete
Â  Â  Â  Â  Â  Â  const isComplete = (statusEl.textContent.trim() === 'Complete') || 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â (statusEl.textContent.trim() === 'Unlocked') || 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â (current >= required);

Â  Â  Â  Â  Â  Â  if (isComplete) {
Â  Â  Â  Â  Â  Â  Â  Â  statusEl.classList.remove('status-incomplete');
Â  Â  Â  Â  Â  Â  Â  Â  statusEl.classList.add('status-complete');
Â  Â  Â  Â  Â  Â  Â  Â  // Update icon to checkmark if it's not a simple 'Unlocked' label
Â  Â  Â  Â  Â  Â  Â  Â  if (statusEl.textContent.trim().includes('Complete') || statusEl.textContent.trim().includes('Unlocked')) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  statusEl.innerHTML = `<ion-icon name="checkmark-circle"></ion-icon> ${statusEl.textContent.trim()}`;
Â  Â  Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â statusEl.innerHTML = `<ion-icon name="checkmark-circle"></ion-icon> ${current}/${required}`;
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  allCriteriaMet = false;
Â  Â  Â  Â  Â  Â  Â  Â  statusEl.classList.remove('status-complete');
Â  Â  Â  Â  Â  Â  Â  Â  statusEl.classList.add('status-incomplete');
Â  Â  Â  Â  Â  Â  Â  Â  // Update icon to close/error icon
Â  Â  Â  Â  Â  Â  Â  Â  if (statusEl.textContent.trim().includes('Pending')) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  statusEl.innerHTML = `<ion-icon name="close-circle"></ion-icon> Pending`;
Â  Â  Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  statusEl.innerHTML = `<ion-icon name="close-circle"></ion-icon> ${current}/${required}`;
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  Â  Â  
Â  Â  Â  Â  // Handle the download button state
Â  Â  Â  Â  const downloadBtn = document.getElementById(`${tier}-download-btn`);
Â  Â  Â  Â  if (allCriteriaMet) {
Â  Â  Â  Â  Â  Â  downloadBtn.disabled = false;
Â  Â  Â  Â  Â  Â  downloadBtn.classList.add('unlocked');
Â  Â  Â  Â  Â  Â  downloadBtn.onclick = () => downloadCertificate(tier);
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  downloadBtn.disabled = true;
Â  Â  Â  Â  Â  Â  downloadBtn.classList.remove('unlocked');
Â  Â  Â  Â  Â  Â  downloadBtn.onclick = null; // Remove click handler when disabled
Â  Â  Â  Â  }
Â  Â  }

Â  Â  /**
Â  Â  Â * Mocks the certificate download action. 
Â  Â  Â */
Â  Â  function downloadCertificate(tier) {
Â  Â  Â  Â  // Simple mock behavior: in a real application, this would trigger 
Â  Â  Â  Â  // a server-side PDF/image generation script.
Â  Â  Â  Â  const tierTitle = tier.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' ');
Â  Â  Â  Â  
Â  Â  Â  Â  // IMPORTANT: Do NOT use alert() in production. Using it here for a quick mock.
Â  Â  Â  Â  // Replace with a custom modal confirmation in a real app.
Â  Â  Â  Â  const message = `Congratulations ${mentorName}!\n\nSimulating download for: ${tierTitle} Mentor Certificate.\n\n(In a real app, a PDF/image file would be generated by the server here.)`;
Â  Â  Â  Â  
Â  Â  Â  Â  // Since custom modals are required instead of alert(), I will log to console instead
Â  Â  Â  Â  console.log("--- Certificate Download Initiated ---");
Â  Â  Â  Â  console.log(message);
Â  Â  Â  Â  console.log("--------------------------------------");
Â  Â  Â  Â  
Â  Â  Â  Â  // Since I cannot use alert() or create a new complex modal, I'll update the button text temporarily to confirm the action
Â  Â  Â  Â  const downloadBtn = document.getElementById(`${tier}-download-btn`);
Â  Â  Â  Â  const originalText = downloadBtn.textContent;
Â  Â  Â  Â  downloadBtn.textContent = "Download Started!";
Â  Â  Â  Â  setTimeout(() => {
Â  Â  Â  Â  Â  Â  Â downloadBtn.textContent = originalText;
Â  Â  Â  Â  }, 2000);
Â  Â  }

    // **********************************************
    // FIX START: ADD EVENT LISTENERS FOR VIEW DETAILS BUTTONS
    // **********************************************
    document.addEventListener('DOMContentLoaded', () => {
        // Certified Mentor button
        const certifiedBtn = document.querySelector('.certified-button');
        if (certifiedBtn) {
            certifiedBtn.addEventListener('click', () => {
                openModal('certified');
            });
        }

        // Distinguished Mentor button
        const distinguishedBtn = document.querySelector('.distinguished-button');
        if (distinguishedBtn) {
            distinguishedBtn.addEventListener('click', () => {
                openModal('distinguished');
            });
        }

        // Elite Mentor button
        const eliteBtn = document.querySelector('.elite-button');
        if (eliteBtn) {
            eliteBtn.addEventListener('click', () => {
                openModal('elite');
            });
        }
    });
    // **********************************************
    // FIX END
    // **********************************************

Â  Â  // Initialize progress checks on page load
Â  Â  window.onload = function() {
Â  Â  Â  Â  checkProgress('certified');
Â  Â  Â  Â  checkProgress('distinguished');
Â  Â  Â  Â  checkProgress('elite');
Â  Â  };

Â  Â  // Include the logout logic from your original file
Â  Â  function confirmLogout(event) {
Â  Â  Â  Â  event.preventDefault();
Â  Â  Â  Â  document.getElementById('logoutDialog').style.display = 'flex';
Â  Â  }

Â  Â  document.getElementById('cancelLogout').onclick = function() {
Â  Â  Â  Â  document.getElementById('logoutDialog').style.display = 'none';
Â  Â  };

Â  Â  document.getElementById('confirmLogoutBtn').onclick = function() {
Â  Â  Â  Â  // In a real application, replace this with actual logout logic (e.g., redirect to 'logout.php')
Â  Â  Â  Â  window.location.href = "../logout.php"; 
Â  Â  };
</script>
Â  
Â  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
Â  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
Â  </script>
Â  <div id="logoutDialog" class="logout-dialog" style="display: none;">
Â  Â  <div class="logout-content">
Â  Â  Â  Â  <h3>Confirm Logout</h3>
Â  Â  Â  Â  <p>Are you sure you want to log out?</p>
Â  Â  Â  Â  <div class="dialog-buttons">
Â  Â  Â  Â  Â  Â  <button id="cancelLogout" type="button">Cancel</button>
Â  Â  Â  Â  Â  Â  <button id="confirmLogoutBtn" type="button">Logout</button>
Â  Â  Â  Â  </div>
Â  Â  </div>
</div>
</body>
</html>